.TH BULKPOST 1 "26 August 1987" "Project Athena"
.SH NAME
bulkpost - add listings in bulk to the whatsup calendar
.SH SYNOPSIS
bulkpost datafile
.SH DESCRIPTION
.I Bulkpost
lets you add multiple listings to the
.I whatsup
calendar of events.
Before using bulkpost, you must prepare a file containing the new listings, 
using a format described below.  Bulkpost scans the supplied file and
asks you to verify the correctness of each listing.  
If all listings are correct, bulkpost gives you the 
option to add them to the whatsup calendar.  Should you choose not to add the 
listings, then bulkpost exits.  This feature is useful for syntax checking
data files without changing the calendar.
If you indicate that even one of the listings is incorrect, then none at all 
are added to
the calendar, but you are given the option to edit your file and try again.
.PP
In general, it is a good idea to get
comfortable with the postit program before trying to use bulkpost.
The concepts are similar, but bulkpost is oriented more to efficient
bulk posting, and it provides less assistance to the new user.
.PP
The bulkpost command on Athena normally lives in /usr/athena.  To run 
bulkpost, just issue the command:
.PP
.in +15
/usr/athena/bulkpost datafile 
.in -15
.PP
where "datafile" is the name of the file containing the listings to be scanned.
.PP
If errors are found, bulkpost will give you the option to edit your file.
Bulkpost uses your standard full screen editor, or you may
set the POSTITEDITOR environment variable to override the default.
The rules for editing files within bulkpost are the same as for the postit
program, and the same GNU Emacs assist keys are defined.  
See the postit man page for details.
.SH BULKPOST DATA FILES
.PP
In general, a bulkpost data file consists of repeated listings of the
form:
.PP
$BeginEvent:   <COMMENTS ON THIS LINE ARE IGNORED>
.br
$Type:
.br
$Title:
.br
$Place:
.br
$When:
.br
$Comments:
.PP
The rules for filling in each of these fields are the same as for postit; see
the postit man page for details.  
In a bulkpost file, these sections may be repeated once for each listing.  Each
listing should begin with a $BeginEvent: line.  The other fields may be 
supplied in any order, and multiple $When: fields may be included for a given
event as appropriate.  Any line beginning with the character
.I #
is ignored by bulkpost.  Such lines may be scattered freely through the file
as a means of providing annotation.
.SH BLANK FORMS
.PP
As an aid to preparing data files for bulkpost, files with blank forms are 
available.  They are:
.PP
        /usr/athena/lib/bulkpost.longform
        /usr/athena/lib/bulkpost.shortform
.PP
The long form has numerous comments with reminders about how the fields
are to be filled in.  The short form omits the comments.  You may begin
with either one, or you may construct your own file from scratch.  In some
cases, it may be convenient to write a program to produce a file in the
correct form.
.SH CUSTOMER RESPONSES
.PP
A mailing list named `whatsup' has been set up at Project Athena.  Please send
your questions and your comments.  DO NOT SEND EVENT ANNOUNCEMENTS TO
THAT LIST.
.SH MISCELLANY
.PP
Bulkpost looks for its GNU Emacs macros in the 
file "/usr/athena/lib/postit.elc".  To override this default,
set the environment variable POSTITEMACSMACROS to the fully qualified
filename of the file containing the macros.  
.SH CAVEATS
The whatsup system is experimental;  we hope that it will provide 
a new way for the MIT Community to keep in touch and to find out
what is happening around town.  We cannot be responsible for innaccuracies
in the information posted on the calendar, for errors in the calendar
programs, for accidental loss of posted event listings, 
or for periodic unavailability of the system.  Your comments
and suggestions are urgently solicted.
.SH BUGS
.PP
Default editor is gnuemacs, which is painfully slow starting up.
.PP
Event type handling is terrible.
.PP
Some of the fields are too short, and the comment field doesn't
allow for carriage returns (you can put them in, but they're turned
into spaces by the word wrap algorithm.)
.PP
The " character is escaped during playback, and the \\ is generally
not entered at all.
.PP
Tries to guess whether you are using gnuemacs by checking whether last
5 letters of command name are "emacs".  Uses -l to load macros if so.
.SH VERSION
This man page applies to bulkpost version 0.5.
.SH SEE ALSO
whatsup(1), postit(1)
.SH AUTHOR
Noah Mendelsohn, IBM T.J. Watson Research and MIT Project Athena
.br
Copyright 1987, Massachusetts Institute of Technology.
