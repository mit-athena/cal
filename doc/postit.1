.TH POSTIT 1 "26 August 1987" "Project Athena"
.SH NAME
postit - post or change listings for the whatsup calendar of events
.SH SYNOPSIS
postit
.SH DESCRIPTION
.I Postit
lets you add new listings or change existing listings on the
.I whatsup
calendar of events.  Note that there is also a program named bulkpost,
which is more convenient when lots of listings are to be posted at one time.
.PP
You should be familiar with whatsup before attempting to use postit.
The postit command on Athena normally lives in /usr/unsupported.  To run 
postit, just issue the command:
.PP
.in +15
/usr/unsupported/postit
.in -15
.PP
You may exit from postit at anytime during its operation by typing
.I CTRL-C
(i.e. hold down the CTRL key and press C at the same time), or by
returning to the main menu, which has an exit option.
.PP
Once started, postit gives you the option to (1) create a new listing,
(2) edit an existing listing or (3) delete an existing listing.
If you chose to
.I create a new listing,
postit will invoke your standard full screen editor (or you may
set the POSTITEDITOR environment variable to override the default)
on a blank form which you fill in to specify the event details. 
Just add the information in the blank space provided for each field.
.SH Filling in the Form
.PP
If the name of your editor ends in the letters "emacs", postit will presume
that you are using
.I GNU Emacs,
and it will define some useful key combinations for you.  
.I M-]
goes to the next postit field, and
.I M-[
goes to the previous field.  On X based displays you get these by holding
down ALT or Compose Character while typing ] or [, on other terminals
you type ESC followed by ] or [.  Use these keys to move through the form.
If you are using any other editor, then no special tabbing assistance is 
provided.  
.PP
In general, a whatsup event listing consists of an event 
.I type
(up to
16 chars, see below),
a 
.I title
(70 chars), a 
.I place
(45 chars), several lines of 
.I comments 
(800 chars),
and a list of dates and times
at which the event is to be shown in the calendar.
Since each event can be listed at several dates and times, you may
repeat the specification of the
.I $When
line in the file.  You may provide as many time listings as you like
for an event.
Comments
may be 800 characters long, which means at least
10 standard lines.  Start the first line after the
$Comments:
field indicator, and continue typing on subsequent lines.  You may split
lines anywhere; postit and whatsup will re-wrap the information to
fit on the actual calendar display terminal anyway.  Extra carriage
returns are NOT preserved, so it is not possible to make tables or paragraphs
in the comments.  It's polite to identify yourself in the comments field,
so people using whatsup can find you if they have questions about the listing.
.PP
To 
.I replace
or 
.I delete 
an event listing, you must know its i.d. number.  Postit
tells you the i.d. number of any events that it creates, or you
can get the event number by selecting the event using whatsup.
.PP
When you update or replace an event, postit will invoke the editor
on a form which is pre-filled with the old event description, 
giving you the option to make changes.  Remember that the new information
completely replaces the old;  if you are adding time listings, be sure
to leave the old ones in the list too.
.SH EVENT TYPES
One of the major weaknesses of the current implementation of whatsup and
postit is that they give no guidance in using event types wisely.  If you
list your event as 'movie', and someone else uses the type 'film', whatsup
will not understand that the events are similar.  
In fact, whatsup won't even realize that 'movie' and 'movies' probably
mean the same thing.
.PP
We hope to improve the
handling of event types in future versions of whatsup and postit.  In 
the meantime, here is a little guidance which may help.  
You may use any type that you like, but the whatsup
program is much more useful if exactly the same type is used to describe
similar events.  When in doubt, always use singular, not plural (i.e. 'meeting', not 'meetings'.)
When in doubt, use a type which seems to be widely used already rather than
inventing your own.  The following is a list
of some of the types which are already being used in the calendar.  Try
to use them whenever they apply.
Please
send suggestions for others to "whatsup@athena", and we will try to 
publicize them.  
.PP
The following event types are currently being used
in the calendar:
.PP
.in +4
.nf
dance     ballet, modern, folk dancing, etc.
drama     any theatrical production
movie     any movie, short, documentary, on campus or off
meeting   any symposium, class, departmental talk, etc.
music     any musical event, including folk, classical, etc.
sports    any sporting event, on or off campus
tv        any television show, incl. campus cable
DEPT      the name of any department at MIT
.fi
.in -4
.PP
There are many others already in widespread use; poke around with
whatsup and you will probably find something close to what you need. 
If all else fails, invent something, or use the type 'other.'
.SH CUSTOMER RESPONSES
.PP
A mailing list named `whatsup' has been set up at Project Athena.  Please send
your questions and your comments.  DO NOT SEND EVENT ANNOUNCEMENTS TO
THAT LIST.
.SH MISCELLANY
.PP
Postit looks for its GNU Emacs macros in the 
file "/usr/unsupported/postit.elc".  To override this default,
set the environment variable POSTITEMACSMACROS to the fully qualified
filename of the file containing the macros.  
.SH CAVEATS
The postit system is experimental;  we hope that it will provide 
a new way for the MIT Community to keep in touch and to find out
what is happening around town.  We cannot be responsible for innaccuracies
in the information posted on the calendar, for errors in the calendar
programs, for accidental loss of posted event listings, 
or for periodic unavailability of the system.  Your comments
and suggestions are urgently solicted.
.SH BUGS
.PP
Default editor is gnuemacs, which is painfully slow starting up.
.PP
Event type handling is terrible.
.PP
Some of the fields are too short, and the comment field doesn't
allow for carriage returns (you can put them in, but they're turned
into spaces by the word wrap algorithm.)
.PP
The " character is escaped during playback, and the \\ is generally
not entered at all.
.PP
Tries to guess whether you are using gnuemacs by checking whether last
5 letters of command name are "emacs".  Uses -l to load macros if so.
.SH VERSION
This man page applies to postit version 0.5.
.SH SEE ALSO
whatsup(1), bulkpost(1)
.SH AUTHOR
Noah Mendelsohn, IBM T.J. Watson Research and MIT Project Athena
.br
Copyright 1987, Massachusetts Institute of Technology.
